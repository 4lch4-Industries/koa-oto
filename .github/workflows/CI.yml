name: CI Pipeline

on:
  release:
    types: [created]
  push:
    branches:
      - main

jobs:
  test-and-coverage:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm test

      - name: Run Code Coverage
        run: npm run coverage

      - name: Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          # Directory to search for coverage reports.
          directory: .nyc_output

          # Specify whether or not CI build should fail if Codecov runs into an error during upload
          fail_ci_if_error: true

  publish-npm:
    if: ${{ $PUBLISH_PACKAGE }}
    needs: test-and-coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/

      - name: Install Dependencies
        run: npm ci

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_SECRET}}

  publish-gpr:
    if: "${{ $PUBLISH_PACKAGE }}"
    needs: test-and-coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/

      - name: Install Dependencies
        run: npm ci

      - name: Publish to GPR
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
